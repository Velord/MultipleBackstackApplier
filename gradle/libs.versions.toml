[versions]
# API
minApi = "29"
targetApi = "34"
# Build
buildTools = "30.0.3"
gradle = "8.0.2"
jvmTarget = "1.8"
# DI
dagger = "2.46.1"
hilt = "2.46.1"
hiltNavigation = "1.0.0"
# Kotlin
kotlin = "1.8.22"
coroutine = "1.7.1"
# Kotlin Serialization
kotlinJsonSerialization = "1.5.0"
kotlinJsonSerializationRetrofitConverter = "1.0.0"
# Google
googleGuava = "32.0.0-android"
# AndroidX
## A
androidxActivity = "1.7.2"
androidxAds = "1.0.0-alpha05"
androidxAnnotation = "1.6.0"
androidxAppCompat = "1.6.1"
androidxAppSearch = "1.1.0-alpha03"
androidxArchCore = "2.2.0"
androidxAsyncLayoutInflater = "1.0.0"
androidxAutoFill = "1.1.0"
## B
androidxBenchmark = "1.1.1"
androidxBiometric = "1.1.0"
androidxBrowser = "1.5.0"
## C
androidxCamera = "1.2.3"
androidxCarApp = "1.2.0"
androidXCardView = "1.0.0"
androidxCollection = "1.2.0"
androidxConcurrent = "1.1.0"
# AndroidX Constraint
androidxConstraint = "2.1.4"
androidxConstraintCompose = "1.1.0-alpha10"
## C
androidxContentPager = "1.0.0"
androidXCoordinatorLayout = "1.2.0"
androidxCore = "1.10.1"
androidxCoreUWB = "1.0.0-alpha05"
androidxCredentials = "1.2.0-alpha05"
androidxCursorAdapter = "1.0.0"
# AndroidX CustomView
androidxCustomView = "1.1.0"
androidxCustomViewPollingContainer = "1.0.0"
## D
androidxDatastore = "1.0.0"
androidxExifInterface = "1.3.6"
androidxFragment = "1.7.0-alpha01"
androidxLegacySupport = "1.0.0"
androidxLifecycle = "2.6.1"
androidxMedia3 = "1.1.0"
androidxNavigation = "2.5.3"
androidxPreference = "1.2.0"
# AndroidX Paging
androidxPaging = "3.1.1"
androidxPagingCompose = "3.2.0-rc01"
# Network
squareRetrofit = "2.9.0"
squareOkhttp3Interceptor = "4.9.1"
# Compose
composeDefault = "1.4.3" # Foundation, Material, Animation, Ui, UiTooling, Runtime
composeAccompanist = "0.31.3-beta"
composeCompiler = "1.4.8"
composeMaterial3 = "1.1.1"
# Compose 3-rd party
composeHtmlIreward = "1.0.2"
# Image loader
coil = "2.2.1"
# Permission
sagarCororutinePermission = "2.0.2"


[libraries]
# AndroidX -----------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------
androidx-ads-identifier = { module = "androidx.ads:ads-identifier", version.ref = "androidxAds" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidxAnnotation" }
androidx-appcompat = { module = "androidx.appcompat:appcompat", version.ref = "androidxAppCompat" }
androidx-appsearch = { module = "androidx.appsearch:appsearch", version.ref = "androidxAppSearch" }
androidx-asynclayoutinflater = { module = "androidx.asynclayoutinflater:asynclayoutinflater", version.ref = "androidxAsyncLayoutInflater" }
androidx-autofill = { module = "androidx.autofill:autofill", version.ref = "androidxAutoFill" }
androidx-benchmark = { module = "androidx.benchmark:benchmark-macro-junit4", version.ref = "androidxBenchmark" }
androidx-biometric = { module = "androidx.biometric:biometric", version.ref = "androidxBiometric" }
androidx-browser = { module = "androidx.browser:browser", version.ref = "androidxBrowser" }
androidx-cardview = { module = "androidx.cardview:cardview", version.ref = "androidXCardView" }
androidx-contentpager = { module = "androidx.contentpager:contentpager", version.ref = "androidxContentPager" }
androidx-coordinatorlayout = { module = "androidx.coordinatorlayout:coordinatorlayout", version.ref = "androidXCoordinatorLayout" }
androidx-core-uwb = { module = "androidx.core.uwb:uwb", version.ref = "androidxCoreUWB" }
androidx-cursoradapter = { module = "androidx.cursoradapter:cursoradapter", version.ref = "androidxCursorAdapter" }
androidx-datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "androidxDatastore" }
androidx-exifinterface = { module = "androidx.exifinterface:exifinterface", version.ref = "androidxExifInterface" }
# AndroidX Activity
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidxActivity" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidxActivity" }
# AndroidX Arch
androidx-arch-common = { module = "androidx.arch.core:core-common", version.ref = "androidxArchCore" }
androidx-arch-runtime = { module = "androidx.arch.core:core-runtime", version.ref = "androidxArchCore" }
androidx-arch-testing = { module = "androidx.arch.core:core-testing", version.ref = "androidxArchCore" }
# AndroidX Camera
androidx-camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "androidxCamera" }
androidx-camera-video = { module = "androidx.camera:camera-video", version.ref = "androidxCamera" }
androidx-camera-view = { module = "androidx.camera:camera-view", version.ref = "androidxCamera" }
androidx-camera-extension = { module = "androidx.camera:camera-extensions", version.ref = "androidxCamera" }
# AndroidX Car App
androidx-carapp-automotive = { module = "androidx.car.app:app-automotive", version.ref = "androidxCarApp" }
androidx-carapp-testing = { module = "androidx.car.app:app-testing", version.ref = "androidxCarApp" }
# AndroidX Constraint
androidx-constraint = { module = "androidx.constraintlayout:constraintlayout", version.ref = "androidxConstraint" }
androidx-constraint-compose = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "androidxConstraintCompose" }
# AndroidX Credentials
androidx-credentials = { module = "androidx.credentials:credentials", version.ref = "androidxCredentials" }
androidx-credentials-below13 = { module = "androidx.credentials:credentials-play-services-auth", version.ref = "androidxCredentials" }
# AndroidX CustomView
androidx-customview = { module = "androidx.customview:customview", version.ref = "androidxCustomView" }
androidx-customview-pollingcontainer = { module = "androidx.customview:customview-poolingcontainer", version.ref = "androidxCustomViewPollingContainer" }
# AndroidX KTX
androidx-fragment = { module = "androidx.fragment:fragment-ktx", version.ref = "androidxFragment" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "androidxCore" }
androidx-preference = { module = "androidx.preference:preference-ktx", version.ref = "androidxPreference" }
androidx-collection = { module = "androidx.collection:collection-ktx", version.ref = "androidxCollection" }
androidx-concurrent = { module = "androidx.concurrent:concurrent-futures-ktx", version.ref = "androidxConcurrent" }
# AndroidX Paging
androidx-paging-runtime = { module = "androidx.paging:paging-runtime", version.ref = "androidxPaging" }
androidx-paging-compose = { module = "androidx.paging:paging-compose", version.ref = "androidxPagingCompose" }
# AndroidX Lifecycle
androidx-lifecycle-service = { module = "androidx.lifecycle:lifecycle-service", version.ref = "androidxLifecycle" }
androidx-lifecycle-process = { module = "androidx.lifecycle:lifecycle-process", version.ref = "androidxLifecycle" }
# AndroidX Lifecycle Runtime
androidx-lifecycle-runtime-ktx = { module = "androidx.lifecycle:lifecycle-runtime-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidxLifecycle" }
# AndroidX Lifecycle Viemodel
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidxLifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidxLifecycle" }
# AndroidX Navigation
androidx-navigation-fragment = { module = "androidx.navigation:navigation-fragment-ktx", version.ref = "androidxNavigation" }
androidx-navigation-ui = { module = "androidx.navigation:navigation-ui-ktx", version.ref = "androidxNavigation" }
androidx-navigation-dynamicfeature = { module = "androidx.navigation:navigation-dynamic-features-fragment", version.ref = "androidxNavigation" }
androidx-navigation-compose = { module = "androidx.navigation:navigation-compose", version.ref = "androidxNavigation" }
# AndroidX Media3
androidx-media3-exoplayer = { module = "androidx.media3:media3-exoplayer", version.ref = "androidxMedia3" }
# Kotlin --------------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk7", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
# Kotlin Coroutine
kotlin-coroutine-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutine" }
kotlin-coroutine-play-service = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutine" }
# Kotlin Serialization
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinJsonSerialization" }
kotlin-serialization-json-retrofit-converter = { module = "com.jakewharton.retrofit:retrofit2-kotlinx-serialization-converter", version.ref = "kotlinJsonSerializationRetrofitConverter" }
# Compose Core  -------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "composeDefault" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "composeDefault" }
# Compose Accompanist
compose-accompanist-flowlayout = { module = "com.google.accompanist:accompanist-flowlayout", version.ref = "composeAccompanist" }
compose-accompanist-systemui = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "composeAccompanist" }
compose-accompanist-drawable = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "composeAccompanist" }
# Compose Accompanist Pager
compose-accompanist-pager = { module = "com.google.accompanist:accompanist-pager", version.ref = "composeAccompanist" }
compose-accompanist-pager-indicator = { module = "com.google.accompanist:accompanist-pager-indicators", version.ref = "composeAccompanist" }
# Compose Foundation
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "composeDefault" }
compose-foundation-layout = { module = "androidx.compose.foundation:foundation-layout", version.ref = "composeDefault" }
# Compose Ui
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "composeDefault" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "composeDefault" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "composeDefault" }
# Compose Material
compose-material = { module = "androidx.compose.material:material", version.ref = "composeDefault" }
compose-material-icons = { module = "androidx.compose.material:material-icons-extended", version.ref = "composeDefault" }
# Compose Material 3
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "composeMaterial3" }
compose-material3-window = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "composeMaterial3" }
# Compose 3-rd party
compose-html = { module = "com.github.ireward:compose-html", version.ref = "composeHtmlIreward" }
# DI Dagger ----------------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------
dagger = { module = "com.google.dagger:dagger", version.ref = "dagger" }
dagger-android = { module = "com.google.dagger:dagger-android", version.ref = "dagger" }
dagger-android-support = { module = "com.google.dagger:dagger-android-support", version.ref = "dagger" }
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-android-processor = { module = "com.google.dagger:dagger-android-processor", version.ref = "dagger" }
# DI Hilt
hilt = { module = "com.google.dagger:hilt-android", version.ref = "hilt" }
hilt-navigation = { module = "androidx.hilt:hilt-navigation-fragment", version.ref = "hiltNavigation" }
hilt-compiler = { module = "com.google.dagger:hilt-android-compiler", version.ref = "hilt" }
# Network SquareUp ---------------------------------------------------------------------------------
# ---------------------------------------------------------------------------------------------------
square-retrofit = { module = "com.squareup.retrofit2:retrofit", version.ref = "squareRetrofit" }
square-okhttp3-interceptor = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "squareOkhttp3Interceptor" }
# ---------------------------------------------------------------------------------------------------
# Permission
sagar-coroutine-permission = { module = "com.sagar:coroutinespermission", version.ref = "sagarCororutinePermission" }
# Image loader
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
# Google
google-guava = { module = "com.google.guava:guava", version.ref = "googleGuava" }


[bundles]
# AndroidX
androidx-other = [
    "androidx-ads-identifier", "androidx-annotation",
    "androidx-appcompat", "androidx-appsearch",
    "androidx-asynclayoutinflater", "androidx-autofill",
    "androidx-benchmark", "androidx-biometric", "androidx-browser",
    "androidx-cardview", "androidx-contentpager",
    "androidx-coordinatorlayout", "androidx-core-uwb",
    "androidx-cursoradapter",
    "androidx-datastore-preferences", "androidx-exifinterface",
]
# AndroidX Activity
androidx-activity = ["androidx-activity-ktx", "androidx-activity-compose"]
# AndroidX Arch Core
androidx-arch = ["androidx-arch-common", "androidx-arch-runtime", "androidx-arch-testing"]
# AndroidX Camera
androidx-camera = [
    "androidx-camera-lifecycle", "androidx-camera-video",
    "androidx-camera-view", "androidx-camera-extension",
]
# AndroidX Car App
androidx-carapp = ["androidx-carapp-automotive" ,"androidx-carapp-testing"]
# AndroidX Constraint
androidx-constraint = ["androidx-constraint", "androidx-constraint-compose"]
# AndroidX Credentials
androidx-credentials = ["androidx-credentials", "androidx-credentials-below13"]
# AndroidX CustomView
androidx-customview = ["androidx-customview", "androidx-customview-pollingcontainer"]
# AndroidX KTX
androidx-ktx = [
    "androidx-fragment", "androidx-core",
    "androidx-preference", "androidx-collection",
    "androidx-concurrent"
]
# AndroidX Paging
androidx-paging = ["androidx-paging-runtime", "androidx-paging-compose"]
# AndroidX Lifecycle
androidx-lifecycle-other = [
    "androidx-lifecycle-service", "androidx-lifecycle-process"
]
androidx-lifecycle-runtime = [
    "androidx-lifecycle-runtime-ktx", "androidx-lifecycle-runtime-compose"
]
androidx-lifecycle-viewmodel = [
    "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-viewmodel-savedstate"
]
androidx-lifecycle-all = [
    "androidx-lifecycle-service", "androidx-lifecycle-process",
    "androidx-lifecycle-runtime-ktx", "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-viewmodel-savedstate"
]
# AndroidX Navigation
androidx-navigation = [
    "androidx-navigation-fragment", "androidx-navigation-ui",
    "androidx-navigation-dynamicfeature", "androidx-navigation-compose"
]
# AndroidX Media3
androidx-media3 = ["androidx-media3-exoplayer"]
# AndroidX Module
androidx-module = [
    "androidx-activity-ktx", "androidx-activity-compose",
    "androidx-appcompat",
    "androidx-lifecycle-service", "androidx-lifecycle-process",
    "androidx-lifecycle-runtime-ktx", "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-viewmodel-savedstate",
    "androidx-navigation-fragment", "androidx-navigation-ui",
    "androidx-navigation-dynamicfeature", "androidx-navigation-compose"
]
# AndroidX All
androidx-all = [
    # AndroidX Activity
    "androidx-activity-ktx", "androidx-activity-compose",
    # AndroidX Arch Core
    "androidx-arch-common", "androidx-arch-runtime", "androidx-arch-testing",
    # AndroidX Other
    "androidx-ads-identifier", "androidx-annotation",
    "androidx-appcompat", "androidx-appsearch",
    "androidx-asynclayoutinflater", "androidx-autofill",
    "androidx-benchmark", "androidx-biometric", "androidx-browser",
    "androidx-cardview", "androidx-contentpager",
    "androidx-coordinatorlayout",
    # Manifest merger failed : uses-sdk:minSdkVersion 29 cannot be smaller than version 31 declared in library [androidx.core.uwb:uwb:1.0.0-alpha05]
    #"androidx-core-uwb",
    "androidx-cursoradapter",
    "androidx-datastore-preferences", "androidx-exifinterface",
    # AndroidX Camera
    "androidx-camera-lifecycle", "androidx-camera-video",
    "androidx-camera-view", "androidx-camera-extension",
    # AndroidX Car App
    "androidx-carapp-automotive" ,"androidx-carapp-testing",
    # AndroidX Constraint
    "androidx-constraint", "androidx-constraint-compose",
    # AndroidX Credentials
    "androidx-credentials", "androidx-credentials-below13",
    # AndroidX CustomView
    "androidx-customview", "androidx-customview-pollingcontainer",
    # AdnroidX KTX
    "androidx-fragment", "androidx-core",
    "androidx-preference", "androidx-collection", "androidx-concurrent",
    # AndroidX Paging
    "androidx-paging-runtime", "androidx-paging-compose",
    # AndroidX Lifecycle
    "androidx-lifecycle-service", "androidx-lifecycle-process",
    "androidx-lifecycle-runtime-ktx", "androidx-lifecycle-runtime-compose",
    "androidx-lifecycle-viewmodel-ktx",
    "androidx-lifecycle-viewmodel-compose",
    "androidx-lifecycle-viewmodel-savedstate",
    # AndroidX Navigation
    "androidx-navigation-fragment", "androidx-navigation-ui",
    "androidx-navigation-dynamicfeature", "androidx-navigation-compose",
    # AndroidX Media3
    "androidx-media3-exoplayer"
]
# Kotlin
kotlin-core = ["kotlin-stdlib", "kotlin-reflect"]
kotlin-coroutine = ["kotlin-coroutine-core", "kotlin-coroutine-play-service"]
kotlin-serialization-json = [
    "kotlin-serialization-json",
    "kotlin-serialization-json-retrofit-converter"
]
kotlin-all = [
    "kotlin-stdlib", "kotlin-reflect",
    "kotlin-coroutine-core", "kotlin-coroutine-play-service",
    "kotlin-serialization-json", "kotlin-serialization-json-retrofit-converter"
]
kotlin-module = [
    "kotlin-stdlib", "kotlin-reflect",
    "kotlin-coroutine-play-service", "kotlin-coroutine-core"
]
# Network
retrofit = ["square-retrofit", "square-okhttp3-interceptor"]
network = [
    "square-retrofit", "square-okhttp3-interceptor",
    "kotlin-serialization-json", "kotlin-serialization-json-retrofit-converter"
]
# Compose
compose-core = ["compose-runtime", "compose-animation"]
# Compose Accompanist
compose-accompanist-core = [
    "compose-accompanist-flowlayout", "compose-accompanist-systemui", "compose-accompanist-drawable"
]
compose-accompanist-pager = ["compose-accompanist-pager", "compose-accompanist-pager-indicator"]
compose-accompanist-all = [
    "compose-accompanist-flowlayout", "compose-accompanist-systemui", "compose-accompanist-drawable",
    "compose-accompanist-pager", "compose-accompanist-pager-indicator"
]
# Compose Foundation
compose-foundation = ["compose-foundation", "compose-foundation-layout"]
# Compose Ui
compose-ui = ["compose-ui", "compose-ui-tooling", "compose-ui-tooling-preview"]
# Compose Material
compose-material = ["compose-material", "compose-material-icons"]
compose-material-third = ["compose-material3", "compose-material3-window"]
compose-material-all = [
    "compose-material", "compose-material-icons",
    "compose-material3", "compose-material3-window",
]
# Compose All
compose-all = [
    "compose-runtime", "compose-animation",
    "compose-accompanist-flowlayout", "compose-accompanist-systemui", "compose-accompanist-drawable",
    "compose-accompanist-pager", "compose-accompanist-pager-indicator",
    "compose-foundation", "compose-foundation-layout",
    "compose-ui", "compose-ui-tooling", "compose-ui-tooling-preview",
    "compose-material", "compose-material-icons",
    "compose-material3", "compose-material3-window"
]
# Compose Third Party
compose-thirdparty = ["compose-html"]
# DI
dagger = ["dagger", "dagger-android", "dagger-android-support"]
dagger-kapt = ["dagger-compiler", "dagger-android-processor"]
hilt = ["hilt", "hilt-navigation"]
dagger-all = ["dagger", "dagger-android", "dagger-android-support", "hilt", "hilt-navigation"]
# Image Loader
coil = ["coil", "coil-compose"]


[plugins]
android-application = { id = "com.android.application", version.ref = "gradle" }
android-library = { id = "com.android.library", version.ref = "gradle" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-kapt = { id = "org.jetbrains.kotlin.kapt", version.ref = "kotlin" }